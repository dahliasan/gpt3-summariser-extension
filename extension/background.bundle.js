(()=>{"use strict";async function e(e,t){const o=t||async function(){let[e]=await chrome.tabs.query({active:!0,lastFocusedWindow:!0});return e}();console.log("sending injection message to:",o),chrome.tabs.sendMessage(o.id,{type:"inject",message:e},(e=>{"failed"===e.status&&console.log("injection failed.")}))}async function t(t,s,r){try{e({content:"generating..."},r);const s=await async function(e,t){const o=await new Promise((e=>{chrome.storage.local.get(["uniqueUserId"],(t=>{if(t.uniqueUserId)e(t.uniqueUserId);else{const t=Date.now().toString()+Math.random().toString(36).substring(2,15);chrome.storage.local.set({uniqueUserId:t},(()=>{e(t)}))}}))})),n=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer wVcIxPHJadXQotPGPgjR5"},body:JSON.stringify({variables:{text:e},user:o})}),s=await n.json();if(console.log("API replied:",s),"error"===s.object)throw s.message;return s.choices.pop()}(t,"https://www.everyprompt.com/api/v0/calls/personal-17/detailed-summary-and-advice-pZMlOa");let a={date:Date.now(),title:r.title,url:r.url,content:s.text};e(a,r);const c=await n(`${s.text} \n\n ${a.title} \n\n ${a.url}`);let i=await o();console.log("this summary's id is: ",i),a={...a,id:i,embedding:c},chrome.storage.local.set({[`summary-${i}`]:a},(function(){console.log("Summary saved to local storage",a)}))}catch(t){console.log("error message received: ",t),t.includes("consider using fewer tokens")?e({content:"ðŸ˜¢ your text is too long, try selecting a smaller section of text."},r):e({content:t},r)}}async function o(){let e=await new Promise((e=>chrome.storage.local.get(["summaryIndex"],e))),t=e.summaryIndex?e.summaryIndex+1:1;return await new Promise((e=>chrome.storage.local.set({summaryIndex:t},e))),t}async function n(e){const t=await fetch("https://summarizooor-server.vercel.app/api/embeddings",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({input:e})}),o=await t.json();if(console.log("embeddings response: ",o),o.error)throw o.error.message;return o.data.embedding}function s(e,t){if(!e||!t)throw console.log("vecA: ",e),console.log("vecB: ",t),new Error("Input vectors are not defined");const o=e=>{let t=0;for(let o=0;o<e.length;o++)t+=e[o]*e[o];return Math.sqrt(t)};return((e,t)=>{let o=0;for(let n=0;n<e.length;n++)o+=e[n]*t[n];return o})(e,t)/(o(e)*o(t))}function r(){console.log("checking if summaries are in correct format"),chrome.storage.local.get(null,(async e=>{for(const t in e)if(t.includes("summary")&&!t.includes("summaryIndex")){const s=e[t];if(!s.embedding||!s.id){console.log("summary missing embedding or id",s);const e=await o(),r={...s,id:e,embedding:n(`${s.content} \n\n ${s.title} \n\n ${s.url} `)};chrome.storage.local.remove(t),chrome.storage.local.set({[`summary-${r.id}`]:r})}}console.log(e)}))}console.log("hello this is the background script!"),chrome.runtime.onMessage.addListener(((e,o,r)=>{e.text&&(console.log("Received input: "+e.text),t(e.text,e.info,e.tab)),e.searchValue&&async function(e){try{console.log("searching summarries...");const t=await new Promise((e=>{chrome.storage.local.get(null,(t=>{e(t)}))}));let o;for(const n in t)if(n.includes("searchQuery")){const s=t[n];if(s.query===e){console.log("query already exists - no need to fetch embeddings again..."),chrome.storage.local.remove(n),o=s.embedding;break}}o||(console.log("query does not exist - fetching embeddings..."),o=await n(e));let r={date:Date.now(),query:e,embedding:o};chrome.storage.local.get(null,(e=>{let t=[];for(const n in e)if(n.includes("summary")&&!n.includes("summaryIndex")){const r=e[n];console.log(r);const a=s(o,r.embedding);t.push({...r,similarity:a})}t.sort(((e,t)=>t.similarity-e.similarity)),r={...r,results:t},chrome.storage.local.set({[`searchQuery-${Date.now()}`]:r},(function(){console.log("Search query and results saved to local storage",r)})),console.log("sending search results...",t),chrome.runtime.sendMessage({type:"search_results",searchResults:t})}))}catch(e){console.log(e)}}(e.searchValue)})),chrome.runtime.onInstalled.addListener((()=>{chrome.contextMenus.create({id:"gpt-summarise",title:"Generate summary",contexts:["all"]}),chrome.tabs.create({url:"https://fxhd.notion.site/TLDR-Summariser-Chrome-Extension-317ba7f2f1c5443cbc99a220c5d073b0"}),r();const e=Date.now().toString()+Math.random().toString(36).substring(2,15);chrome.storage.local.set({uniqueUserId:e},(()=>{console.log("Unique user ID stored in chrome.storage.local: "+e)}))})),chrome.contextMenus.onClicked.addListener(((e,o)=>{e.selectionText?t(e.selectionText,0,o):chrome.tabs.sendMessage(o.id,{type:"get_webpage"},(e=>{console.log("webpage content received: ",e),t(e.text,0,o)}))})),chrome.runtime.onStartup.addListener((()=>{r()}))})();